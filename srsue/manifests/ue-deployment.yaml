---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: srsran-ue
  labels:
    app: srsran
    component: ue
spec:
  selector:
    matchLabels:
      app: srsran
      component: ue
  replicas: 1
  template:
    metadata:
      labels:
        app: srsran
        component: ue
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          { "name": "n3network", "interface": "n3", "ips": [ "10.10.3.232/24" ]}
          ]'
    spec:
      containers:
        - image: ghcr.io/ziyad-mabrouk/srsue:v1.0
          imagePullPolicy: IfNotPresent
          name: ue
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_NICE", "IPC_LOCK", "CAP_NET_ADMIN"]
          command: ["/bin/bash", "-c", "--"]
          args:
            - |
              mkdir -p /dev/net
              mknod /dev/net/tun c 10 200
              ip netns add ue0
              while true; do sleep 30; done
          env:
            - name: PATH
              value: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/srsran/config"
          volumeMounts:
            - mountPath: /srsran/config
              name: ue-volume
          # resources:
          #   requests:
          #     memory: "1000Mi"
          #     cpu: "1000m"
          #   limits:
          #     memory: "5000Mi"
          #     cpu: "5000m"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: ue-volume
          configMap:
            name: ue-configmap
            items:
              - key: ue0.conf
                path: ue0.conf
              - key: multi_ue_scenario.py
                path: multi_ue_scenario.py
              - key: generate_ue_conf.py
                path: generate_ue_conf.py
              - key: start_ue.sh
                path: start_ue.sh
                mode: 0755
              - key: start_gnu.sh
                path: start_gnu.sh
                mode: 0755